services:
  backend:
    build:
      context: .
      dockerfile: ./webapp/Dockerfile
    depends_on:
      db:
        condition: service_healthy
    image: quantimage2_backend:3.0
    env_file:
      - env_files/common.env
      - env_files/webapp.env
    secrets:
      - db-user-password
    volumes:
      - backend-data:/quantimage2-data

  celery_extraction:
    build:
      context: .
      dockerfile: ./workers/Dockerfile
    image: quantimage2_backend_celery:3.0
    env_file:
      - env_files/common.env
      - env_files/workers.env
      - env_files/workers-extraction.env
    secrets:
      - db-user-password
    volumes:
      - backend-data:/quantimage2-data
    command: ["celery", "--app=tasks", "worker", "--loglevel=INFO", "--pool=prefork", "--hostname=extraction@%h", "--queues=extraction"]

  celery_training:
    image: quantimage2_backend_celery:3.0
    env_file:
      - env_files/common.env
      - env_files/workers.env
      - env_files/workers-training.env
    secrets:
      - db-user-password
    volumes:
      - backend-data:/quantimage2-data
    command: ["celery", "--app=tasks", "worker", "--loglevel=INFO", "--pool=prefork", "--hostname=training@%h", "--queues=training"]

  flower:
    build: ./flower
    image: quantimage2_flower:3.0
    env_file:
      - env_files/common.env

  db:
    image: mysql:5.7
    env_file:
      - env_files/common.env
    secrets:
      - db-root-password
      - db-user-password
    volumes:
      - backend-db:/var/lib/mysql
    healthcheck:
      test: out=$$(mysqladmin ping -h localhost -P 3306 -u root --password=$$(cat $${MYSQL_ROOT_PASSWORD_FILE}) 2>&1); echo $$out | grep 'mysqld is alive' || { echo $$out; exit 1; }
      interval: 10s
      timeout: 10s
      retries: 5

  phpmyadmin:
    image: phpmyadmin
    env_file:
      - env_files/phpmyadmin.env
    volumes:
      - pma-sessions:/sessions
    depends_on:
      - db

  redis:
    image: redis:7.4.1
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - tasks-db:/data

  redis-socket:
    image: redis:7.4.1

  keycloak:
    profiles:
      - dev
    image: quay.io/keycloak/keycloak:16.1.1
    env_file:
      - env_files/common.env
      - env_files/keycloak.env
    environment:
      DB_ADDR: keycloak-db
    secrets:
      - keycloak-db-user-password
      - keycloak-admin-password
      - quantimage2-admin-password
    volumes:
      - ./keycloak/quantimage2_theme:/opt/jboss/keycloak/themes/quantimage-v2
      - ./keycloak/QuantImage-v2-realm.json:/QuantImage-v2-realm.json
      - ./keycloak/startup-scripts:/opt/jboss/startup-scripts
      - ./keycloak/exports:/tmp/export
      - ./keycloak/export-realm.sh:/opt/jboss/tools/export-realm.sh
    depends_on:
      - keycloak-db
    command: ["-b", "0.0.0.0","-Dkeycloak.profile=preview","-Dkeycloak.migration.strategy=IGNORE_EXISTING"]

  keycloak-db:
    profiles:
      - dev
    image: postgres:17.6
    env_file:
      - env_files/keycloak.env
    secrets:
      - keycloak-db-user-password
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data

  ohif:
    image: ohif/viewer:v4.12.35.19437
    volumes:
      - ./ohif/ohif-config.js:/usr/share/nginx/html/app-config.js

secrets:
  db-root-password:
    file: secrets/db_root_password
  db-user-password:
    file: secrets/db_user_password
  quantimage2-admin-password:
    file: secrets/quantimage2_admin_password
  keycloak-db-user-password:
    file: secrets/keycloak_db_user_password
  keycloak-admin-password:
    file: secrets/keycloak_admin_password

volumes:
  backend-data:
  backend-db:
  pma-sessions:
  tasks-db:
  keycloak-db-data:
